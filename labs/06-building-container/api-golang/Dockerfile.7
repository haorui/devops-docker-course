# Pin specific version for stability
# Use separate stage for building image
# Use debain fro easier build utilities
FROM golang:1.21-bullseye AS build

# Add non root user
RUN useradd -u 1001 nonroot

WORKDIR /app

# Copy only files required to install dependencies (better layer caching)
COPY go.mod go.sum ./

# Use cache mount to speed up install of existing dependencies
RUN --mount=type=cache,target=/go/pkg/mod \
  --mount=type=cache,target=/root/.cache/go-build \
  go mod download

COPY . .

# Compile healthcheck
RUN go build \
  -ldflags="-linkmode external -extldflags -static" \
  -tags netgo \
  -o healthcheck \
  ./healthcheck/healthcheck.go

# Compile application during build rather that at runtime
# Add flags to statically link binary
RUN go build \
  -ldflags="-linkmode external -extldflags -static" \
  -tags netog \
  -o api-golang

# Use separate stage for depolyable image
FROM scratch

# Set gin mode
ENV GIN_MODE=release

WORKDIR /

# Copy the passwd file
COPY --from=build /etc/passwd /etc/passwd

# Copy the healthcheck binary form the build stage
COPY --from=build /app/healthcheck/healthcheck healthcheck

# Copy the binary from the build stage
COPY --from=build /app/api-golang api-golang

# Use nonroot user
USER nonroot

# Indicate expected port
EXPOSE 8080

CMD [ "/api-golang" ]